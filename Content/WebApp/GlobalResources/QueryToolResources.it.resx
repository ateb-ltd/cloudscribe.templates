<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Are you sure you want to delete the selected query?" xml:space="preserve">
    <value>Sei sicuro di voler eliminare la query selezionata?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annulla</value>
  </data>
  <data name="Clear Query" xml:space="preserve">
    <value>Cancella domanda</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Vicino</value>
  </data>
  <data name="Columns" xml:space="preserve">
    <value>Colonne</value>
  </data>
  <data name="Confirm Delete" xml:space="preserve">
    <value>Conferma cancellazione</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Eliminare</value>
  </data>
  <data name="Delete Query" xml:space="preserve">
    <value>Elimina domanda</value>
  </data>
  <data name="Enable as API query?" xml:space="preserve">
    <value>Abilitare come query API?</value>
  </data>
  <data name="Error deleting query" xml:space="preserve">
    <value>Errore durante l'eliminazione della query</value>
  </data>
  <data name="Error loading query" xml:space="preserve">
    <value>Errore durante il caricamento della query</value>
  </data>
  <data name="Error saving query" xml:space="preserve">
    <value>Errore durante il salvataggio della query</value>
  </data>
  <data name="Execute Query" xml:space="preserve">
    <value>Esegui interrogazione</value>
  </data>
  <data name="Export CSV" xml:space="preserve">
    <value>Esporta CSV</value>
  </data>
  <data name="Insert" xml:space="preserve">
    <value>Inserire</value>
  </data>
  <data name="Insert at Cursor" xml:space="preserve">
    <value>Inserisci al cursore</value>
  </data>
  <data name="Invalid query! Only SELECT, INSERT, UPDATE, and DELETE are allowed." xml:space="preserve">
    <value>Richiesta non valida! Sono consentiti solo SELECT, INSERT, UPDATE e DELETE.</value>
  </data>
  <data name="Load Query" xml:space="preserve">
    <value>Carica domanda</value>
  </data>
  <data name="Query" xml:space="preserve">
    <value>Domanda</value>
  </data>
  <data name="Query Tool" xml:space="preserve">
    <value>Strumento di interrogazione</value>
  </data>
  <data name="Query deleted" xml:space="preserve">
    <value>Interrogazione eliminata</value>
  </data>
  <data name="Query loaded" xml:space="preserve">
    <value>Query caricata</value>
  </data>
  <data name="Query saved" xml:space="preserve">
    <value>Query salvata</value>
  </data>
  <data name="Save Query" xml:space="preserve">
    <value>Salva domanda</value>
  </data>
  <data name="Save Query As" xml:space="preserve">
    <value>Salva query con nome</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Selezionare</value>
  </data>
  <data name="Tables" xml:space="preserve">
    <value>Tabelle</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Aggiornamento</value>
  </data>
  <data name="You must select at least one column from the 'Columns' list!" xml:space="preserve">
    <value>Devi selezionare almeno una colonna dall'elenco 'Colonne'!</value>
  </data>
  <data name="{0} rows affected" xml:space="preserve">
    <value>{0} righe interessate</value>
  </data>
</root>
